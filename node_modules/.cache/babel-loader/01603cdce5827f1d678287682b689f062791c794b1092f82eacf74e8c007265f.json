{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { WindowContext } from './context';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider({\n  children\n}) {\n  const [isActiveWindow, setActiveWindow] = useState(true);\n  useEffect(() => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const visibilityChangeListener = () => {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false);\n          break;\n        case 'visible':\n          setActiveWindow(true);\n          break;\n      }\n    };\n    document.addEventListener('visibilitychange', visibilityChangeListener);\n    return () => document.removeEventListener('visibilitychange', visibilityChangeListener);\n  }, []);\n  return _jsx(WindowContext.Provider, {\n    value: isActiveWindow,\n    children: children\n  });\n}\n//# sourceMappingURL=provider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}