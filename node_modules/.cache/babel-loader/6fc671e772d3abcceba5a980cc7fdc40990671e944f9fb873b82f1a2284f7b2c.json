{"ast":null,"code":"import { useMemo } from 'react';\nimport { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\nexport function useReadonlyNetwork(opts = {}) {\n  const chainId = useChainId({\n    queryParams: {\n      chainId: opts.chainId\n    }\n  });\n  const providers = useReadonlyNetworks();\n  return useMemo(() => providers[chainId] !== undefined && chainId !== undefined ? {\n    provider: providers[chainId],\n    chainId: chainId\n  } : undefined, [chainId, providers[chainId]]);\n}\n//# sourceMappingURL=useReadonlyProvider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}