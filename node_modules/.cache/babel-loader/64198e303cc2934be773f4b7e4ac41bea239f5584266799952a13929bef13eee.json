{"ast":null,"code":"import { providers } from 'ethers';\nimport { Event } from '../../../../helpers/event';\nexport class InjectedConnector {\n  constructor(provider) {\n    this.name = 'Injected';\n    this.update = new Event();\n    this.provider = providers.Provider.isProvider(provider) ? provider : new providers.Web3Provider(provider);\n  }\n  async connectEagerly() {\n    if (!this.provider) {\n      return;\n    }\n    try {\n      const chainId = await this.provider.send('eth_chainId', []);\n      const accounts = await this.provider.send('eth_accounts', []);\n      this.update.emit({\n        chainId: parseInt(chainId),\n        accounts\n      });\n    } catch (error) {\n      console.debug(error);\n    }\n  }\n  async activate() {\n    if (!this.provider) {\n      throw new Error('Could not activate connector');\n    }\n    try {\n      const chainId = await this.provider.send('eth_chainId', []);\n      const accounts = await this.provider.send('eth_accounts', []);\n      this.update.emit({\n        chainId: parseInt(chainId),\n        accounts\n      });\n    } catch (error) {\n      console.log(error);\n      throw new Error('Could not activate connector');\n    }\n  }\n  async deactivate() {\n    this.provider = undefined;\n  }\n}\n//# sourceMappingURL=injected.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}