{"ast":null,"code":"import { utils } from 'ethers';\nimport { BigNumber } from 'ethers';\nimport { shortenString } from './common';\n/**\n * @public\n */\nexport function shortenAddress(address) {\n  try {\n    const formattedAddress = utils.getAddress(address);\n    return shortenString(formattedAddress);\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n/**\n * @public\n */\nexport function shortenIfAddress(address) {\n  if (typeof address === 'string' && address.length > 0) {\n    return shortenAddress(address);\n  }\n  return '';\n}\n/**\n * @public\n */\nexport function compareAddress(firstAddress, secondAddress) {\n  try {\n    const parsedFirstAddress = BigNumber.from(firstAddress);\n    const parsedSecondAddress = BigNumber.from(secondAddress);\n    if (parsedFirstAddress.gt(parsedSecondAddress)) {\n      return 1;\n    }\n    if (parsedFirstAddress.lt(parsedSecondAddress)) {\n      return -1;\n    }\n    return 0;\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n/**\n * @public\n */\nexport function addressEqual(firstAddress, secondAddress) {\n  try {\n    return utils.getAddress(firstAddress) === utils.getAddress(secondAddress);\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n//# sourceMappingURL=address.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}