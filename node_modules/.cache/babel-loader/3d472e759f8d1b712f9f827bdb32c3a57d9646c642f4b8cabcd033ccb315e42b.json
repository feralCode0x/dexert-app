{"ast":null,"code":"import detectEthereumProvider from '@metamask/detect-provider';\nimport { providers } from 'ethers';\nimport { isWebSocketProvider } from './isWebSocketProvider';\nconst GET_METAMASK_LINK = 'https://metamask.io/download.html';\nexport async function getInjectedProvider(getPollingInterval) {\n  var _a;\n  if (!window.ethereum) {\n    window.open(GET_METAMASK_LINK);\n    return undefined;\n  }\n  const injectedProviders = (window === null || window === void 0 ? void 0 : window.ethereum.providers) || [];\n  const injectedProvider = (_a = injectedProviders.find(provider => {\n    var _a;\n    return (_a = provider.isMetaMask) !== null && _a !== void 0 ? _a : false;\n  })) !== null && _a !== void 0 ? _a : await detectEthereumProvider();\n  if (!injectedProvider) {\n    window.open(GET_METAMASK_LINK);\n    return undefined;\n  }\n  const provider = new providers.Web3Provider(injectedProvider, 'any');\n  const chainId = await provider.send('eth_chainId', []);\n  if (!isWebSocketProvider(provider)) {\n    provider.pollingInterval = getPollingInterval(chainId);\n  }\n  return provider;\n}\n//# sourceMappingURL=injectedProvider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}