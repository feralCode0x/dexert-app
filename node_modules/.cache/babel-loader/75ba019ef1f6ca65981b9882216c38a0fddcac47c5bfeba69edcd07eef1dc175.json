{"ast":null,"code":"import { ethers } from 'ethers';\nexport const getSignerFromOptions = (provider, options, library) => {\n  const privateKey = options && 'privateKey' in options && options.privateKey;\n  const mnemonicPhrase = options && 'mnemonicPhrase' in options && options.mnemonicPhrase;\n  const json = options && 'json' in options && options.json;\n  const password = options && 'password' in options && options.password;\n  const privateKeySigner = privateKey && provider && new ethers.Wallet(privateKey, provider);\n  const mnemonicPhraseSigner = mnemonicPhrase && provider && ethers.Wallet.fromMnemonic(mnemonicPhrase).connect(provider);\n  const encryptedJsonSigner = json && password && provider && ethers.Wallet.fromEncryptedJsonSync(json, password).connect(provider);\n  const optionsSigner = options && 'signer' in options && options.signer;\n  return privateKeySigner || mnemonicPhraseSigner || encryptedJsonSigner || optionsSigner || (library && 'getSigner' in library ? library.getSigner() : undefined);\n};\n//# sourceMappingURL=getSignerFromOptions.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}