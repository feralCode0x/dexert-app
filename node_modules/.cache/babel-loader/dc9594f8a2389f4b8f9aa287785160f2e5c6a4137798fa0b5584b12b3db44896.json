{"ast":null,"code":"import { DEFAULT_SUPPORTED_CHAINS } from '../constants';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport const getChainById = chainId => DEFAULT_SUPPORTED_CHAINS.find(network => network.chainId === chainId);\nconst deprecationWarning = methodName => console.warn(`${methodName} is deprecated, can call with Chain directly`);\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerAddressLink = (address, chainId) => {\n  var _a;\n  deprecationWarning('getExplorerAddressLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerAddressLink(address)) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerTransactionLink = (transactionHash, chainId) => {\n  var _a;\n  deprecationWarning('getExplorerTransactionLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerTransactionLink(transactionHash)) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport const getChainName = chainId => {\n  var _a;\n  deprecationWarning('getChainName');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport const isTestChain = chainId => {\n  var _a;\n  deprecationWarning('isTestChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isTestChain) || false;\n};\n/**\n * @public\n * @deprecated\n */\nexport const isLocalChain = chainId => {\n  var _a;\n  deprecationWarning('isLocalChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isLocalChain) || false;\n};\n//# sourceMappingURL=chain.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}